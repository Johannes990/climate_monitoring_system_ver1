"use client";

import React, {useCallback, useEffect, useState} from "react";
import {NotificationDTO} from "@/app/dto/notification/NotificationDTO";
import {fetchActiveNotifications, fetchAllNotifications} from "@/app/dashboard/notifications/notificationService";

export default function Notifications() {
    const [notifications, setNotifications] = useState<NotificationDTO[]>([]);
    const [activeNotifications, setActiveNotifications] = useState<NotificationDTO[]>([]);
    const [error, setError] = useState<string>("");

    const fetchData = useCallback(async () => {
        try {
            const allData = await fetchAllNotifications();
            const parsedAllData = allData.map(notification => ({
                ...notification,
                action: notification.action || null,
                isActive: notification.isActive === true,
            }));
            const activeNotifications = await fetchActiveNotifications(true);
            setNotifications(parsedAllData);
            setActiveNotifications(activeNotifications);
        } catch (err) {
            setError("Failed to fetch all notifications");
            console.error(err);
        }
    }, []);

    useEffect(() => {
        window.history.replaceState(null, "", window.location.href);
        fetchData();
    }, [fetchData]);

    return (
        <main className="flex min-h-screen flex-col items-center justify-center p-6 bg-gray-100">
            <div className="w-full max-w-2xl p-8 space-y-6 bg-white rounded shadow-md">
                <h1 className="text-3xl font-bold text-center">Active Notifications</h1>

                {error && <p className="text-red-500">{error}</p>}

                <div className="overflow-x-auto w-full">
                    <table className="min-w-full bg-white border">
                        <thead>
                        <tr>
                            <th className="px-4 py-2 border">ID</th>
                            <th className="px-4 py-2 border">Notification type</th>
                            <th className="px-4 py-2 border">Generated by sensor</th>
                            <th className="px-4 py-2 border">Time</th>
                            <th className="px-4 py-2 border">Conditions resolved</th>
                            <th className="px-4 py-2 border">Action taken</th>
                        </tr>
                        </thead>
                        <tbody>
                        {activeNotifications.map((notification) => (
                            <tr key={notification.notificationId}>
                                <th className="px-4 py-2 border">{notification.notificationId}</th>
                                <th className="px-4 py-2 border">{notification.notificationType.notificationTypeDescription}</th>
                                <th className="px-4 py-2 border">{notification.sensor.sensorId}</th>
                                <th className="px-4 py-2 border">{notification.timestamp.toLocaleString()}</th>
                                <th className="px-4 py-2 border">{notification.conditionsSelfResolved ? "conditions self-resolved" : "conditions did not self-resolve"}</th>
                                <th className="px-4 py-2 border">{notification.userActionTaken ? "user action taken" : "user action not taken"}</th>
                            </tr>
                        ))}
                        </tbody>
                    </table>
                </div>
                <h1 className="text-3xl font-bold text-center">All Notifications</h1>

                {error && <p className="text-red-500">{error}</p>}

                <div className="overflow-x-auto w-full">
                    <table className="min-w-full bg-white border">
                        <thead>
                        <tr>
                            <th className="px-4 py-2 border">ID</th>
                            <th className="px-4 py-2 border">Notification type</th>
                            <th className="px-4 py-2 border">Generated by sensor</th>
                            <th className="px-4 py-2 border">Time</th>
                            <th className="px-4 py-2 border">Conditions resolved</th>
                            <th className="px-4 py-2 border">Action taken</th>
                        </tr>
                        </thead>
                        <tbody>
                        {notifications.map((notification) => (
                            <tr key={notification.notificationId}>
                                <th className="px-4 py-2 border">{notification.notificationId}</th>
                                <th className="px-4 py-2 border">{notification.notificationType.notificationTypeDescription}</th>
                                <th className="px-4 py-2 border">{notification.sensor.sensorId}</th>
                                <th className="px-4 py-2 border">{notification.timestamp.toLocaleString()}</th>
                                <th className="px-4 py-2 border">{notification.conditionsSelfResolved ? "conditions self-resolved" : "conditions did not self-resolve"}</th>
                                <th className="px-4 py-2 border">{notification.userActionTaken ? "user action taken" : "user action not taken"}</th>
                            </tr>
                        ))}
                        </tbody>
                    </table>
                </div>

            </div>
        </main>
    );
}
